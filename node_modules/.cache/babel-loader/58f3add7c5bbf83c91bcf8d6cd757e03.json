{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jorge\\\\Desktop\\\\reactlasts\\\\inmobiliariareact\\\\bookshooks\\\\src\\\\context.js\";\nimport React, { Component } from \"react\";\nimport items from \"./data\"; //import Client from \"./Contentful\";\n\nconst RoomContext = React.createContext();\nexport default class RoomProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      rooms: [],\n      sortedRooms: [],\n      featuredRooms: [],\n      loading: true,\n      //\n      type: \"all\",\n      capacity: 1,\n      price: 0,\n      minPrice: 0,\n      maxPrice: 0,\n      minSize: 0,\n      maxSize: 0,\n      search: \"\",\n      breakfast: false,\n      pets: false\n    };\n\n    this.getRoom = slug => {\n      let tempRooms = [...this.state.rooms];\n      const room = tempRooms.find(room => room.slug === slug);\n      return room;\n    };\n\n    this.handleChange = event => {\n      const target = event.target;\n      const value = target.type === \"checkbox\" ? target.checked : target.value;\n      const name = target.name;\n      console.log(name, value);\n      this.setState({\n        [name]: value\n      }, this.filterRooms);\n    };\n\n    this.filterRooms = () => {\n      let {\n        rooms,\n        type,\n        capacity,\n        price,\n        minSize,\n        maxSize,\n        breakfast,\n        pets,\n        search\n      } = this.state;\n      let tempRooms = [...rooms]; // transform values\n      // get capacity\n\n      capacity = parseInt(capacity);\n      price = parseInt(price); // filter by type\n\n      if (type !== \"all\") {\n        tempRooms = tempRooms.filter(room => room.type === type);\n      } // filter by capacity\n\n\n      if (capacity !== 1) {\n        tempRooms = tempRooms.filter(room => room.capacity >= capacity);\n      } // filter by price\n\n\n      tempRooms = tempRooms.filter(room => room.price <= price); //filter by size\n\n      tempRooms = tempRooms.filter(room => room.size >= minSize && room.size <= maxSize); //filter by breakfast\n\n      if (breakfast) {\n        tempRooms = tempRooms.filter(room => room.breakfast === true);\n      } //filter by pets\n\n\n      if (pets) {\n        tempRooms = tempRooms.filter(room => room.pets === true);\n      }\n\n      if (search !== \"\") {\n        tempRooms = tempRooms.filter(item => {\n          let title = item.name.toLowerCase().trim();\n          return title.startsWith(search) ? item : null;\n        });\n      }\n\n      this.setState({\n        sortedRooms: tempRooms\n      });\n    };\n  }\n\n  componentDidMount() {\n    // this.getData();\n    let rooms = this.formatData(items);\n    let featuredRooms = rooms.filter(room => room.featured === true); //\n\n    let maxPrice = Math.max(...rooms.map(item => item.price));\n    let maxSize = Math.max(...rooms.map(item => item.size));\n    this.setState({\n      rooms,\n      featuredRooms,\n      sortedRooms: rooms,\n      loading: false,\n      price: maxPrice,\n      maxPrice,\n      maxSize\n    });\n  }\n\n  formatData(items) {\n    let tempItems = items.map(item => {\n      let id = item.sys.id;\n      let images = item.fields.images.map(image => image.fields.file.url);\n      let room = { ...item.fields,\n        images,\n        id\n      };\n      return room;\n    });\n    return tempItems;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(RoomContext.Provider, {\n      value: { ...this.state,\n        getRoom: this.getRoom,\n        handleChange: this.handleChange\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 7\n      }\n    }, this.props.children);\n  }\n\n}\nconst RoomConsumer = RoomContext.Consumer;\nexport { RoomProvider, RoomConsumer, RoomContext };\nexport function withRoomConsumer(Component) {\n  return function ConsumerWrapper(props) {\n    return /*#__PURE__*/React.createElement(RoomConsumer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 7\n      }\n    }, value => /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n      context: value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 19\n      }\n    })));\n  };\n}","map":{"version":3,"sources":["C:/Users/Jorge/Desktop/reactlasts/inmobiliariareact/bookshooks/src/context.js"],"names":["React","Component","items","RoomContext","createContext","RoomProvider","state","rooms","sortedRooms","featuredRooms","loading","type","capacity","price","minPrice","maxPrice","minSize","maxSize","search","breakfast","pets","getRoom","slug","tempRooms","room","find","handleChange","event","target","value","checked","name","console","log","setState","filterRooms","parseInt","filter","size","item","title","toLowerCase","trim","startsWith","componentDidMount","formatData","featured","Math","max","map","tempItems","id","sys","images","fields","image","file","url","render","props","children","RoomConsumer","Consumer","withRoomConsumer","ConsumerWrapper"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport items from \"./data\";\r\n//import Client from \"./Contentful\";\r\n\r\nconst RoomContext = React.createContext();\r\n\r\nexport default class RoomProvider extends Component {\r\n  state = {\r\n    rooms: [],\r\n    sortedRooms: [],\r\n    featuredRooms: [],\r\n    loading: true,\r\n    //\r\n    type: \"all\",\r\n    capacity: 1,\r\n    price: 0,\r\n    minPrice: 0,\r\n    maxPrice: 0,\r\n    minSize: 0,\r\n    maxSize: 0,\r\n    search: \"\",\r\n    breakfast: false,\r\n    pets: false\r\n  };\r\n\r\n\r\n\r\n \r\n\r\n\r\n\r\n \r\n  componentDidMount() {\r\n    // this.getData();\r\n    let rooms = this.formatData(items);\r\n    let featuredRooms = rooms.filter(room => room.featured === true);\r\n    //\r\n    let maxPrice = Math.max(...rooms.map(item => item.price));\r\n    let maxSize = Math.max(...rooms.map(item => item.size));\r\n    this.setState({\r\n      rooms,\r\n      featuredRooms,\r\n      sortedRooms: rooms,\r\n      loading: false,\r\n      price: maxPrice,\r\n      maxPrice,\r\n      maxSize\r\n    });\r\n  }\r\n\r\n  formatData(items) {\r\n    let tempItems = items.map(item => {\r\n      let id = item.sys.id;\r\n      let images = item.fields.images.map(image => image.fields.file.url);\r\n\r\n      let room = { ...item.fields, images, id };\r\n      return room;\r\n    });\r\n    return tempItems;\r\n  }\r\n\r\n\r\n  getRoom = slug => {\r\n    let tempRooms = [...this.state.rooms];\r\n    const room = tempRooms.find(room => room.slug === slug);\r\n    return room;\r\n  };\r\n\r\n\r\n\r\n  handleChange = event => {\r\n    const target = event.target;\r\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\r\n    const name = target.name;\r\n    console.log(name, value);\r\n\r\n    this.setState(\r\n      {\r\n        [name]: value\r\n      },\r\n      this.filterRooms\r\n    );\r\n  };\r\n\r\n\r\n  \r\n  filterRooms = () => {\r\n    let {\r\n      rooms,\r\n      type,\r\n      capacity,\r\n      price,\r\n      minSize,\r\n      maxSize,\r\n      breakfast,\r\n      pets,\r\n      search\r\n    } = this.state;\r\n\r\n    let tempRooms = [...rooms];\r\n    // transform values\r\n    // get capacity\r\n    capacity = parseInt(capacity);\r\n    price = parseInt(price);\r\n    // filter by type\r\n    if (type !== \"all\") {\r\n      tempRooms = tempRooms.filter(room => room.type === type);\r\n    }\r\n    // filter by capacity\r\n    if (capacity !== 1) {\r\n      tempRooms = tempRooms.filter(room => room.capacity >= capacity);\r\n    }\r\n    // filter by price\r\n    tempRooms = tempRooms.filter(room => room.price <= price);\r\n    //filter by size\r\n    tempRooms = tempRooms.filter(\r\n      room => room.size >= minSize && room.size <= maxSize\r\n    );\r\n    //filter by breakfast\r\n    if (breakfast) {\r\n      tempRooms = tempRooms.filter(room => room.breakfast === true);\r\n    }\r\n    //filter by pets\r\n    if (pets) {\r\n      tempRooms = tempRooms.filter(room => room.pets === true);\r\n    }\r\n\r\n    if (search !== \"\") {\r\n      tempRooms = tempRooms.filter(item => {\r\n        let title = item.name.toLowerCase().trim();\r\n        return title.startsWith(search) ? item : null;\r\n      });\r\n    }\r\n\r\n    this.setState({\r\n      sortedRooms: tempRooms\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <RoomContext.Provider\r\n        value={{\r\n          ...this.state,\r\n          getRoom: this.getRoom,\r\n          handleChange: this.handleChange\r\n        }}\r\n      >\r\n        {this.props.children}\r\n      </RoomContext.Provider>\r\n    );\r\n  }\r\n}\r\nconst RoomConsumer = RoomContext.Consumer;\r\n\r\nexport { RoomProvider, RoomConsumer, RoomContext };\r\n\r\nexport function withRoomConsumer(Component) {\r\n  return function ConsumerWrapper(props) {\r\n    return (\r\n      <RoomConsumer>\r\n        {value => <Component {...props} context={value} />}\r\n      </RoomConsumer>\r\n    );\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}