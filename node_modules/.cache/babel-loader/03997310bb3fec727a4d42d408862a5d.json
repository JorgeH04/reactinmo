{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jorge\\\\Desktop\\\\proyectos\\\\1react\\\\bookshooks\\\\bookshooks\\\\src\\\\pages\\\\Login.js\";\nimport React from \"react\"; // strapi function\n\nimport loginUser from \"../strapi/loginUser\";\nimport registerUser from \"../strapi/registerUser\"; //handle user\n\nimport { useHistory } from \"react-router-dom\";\nimport { UserContext } from \"../context/user\";\nexport default function Login() {\n  const history = useHistory(); // setup user context\n\n  const {\n    userLogin,\n    alert,\n    showAlert\n  } = React.useContext(UserContext); // state values\n\n  const [email, setEmail] = React.useState(\"\");\n  const [password, setPassword] = React.useState(\"\");\n  const [username, setUsername] = React.useState(\"default\");\n  const [isMember, setIsMember] = React.useState(true);\n  let isEmpty = !email || !password || !username || alert.show;\n\n  const toggleMember = () => {\n    setIsMember(prevMember => {\n      let isMember = !prevMember;\n      isMember ? setUsername(\"default\") : setUsername(\"\");\n      return isMember;\n    });\n  };\n\n  const handleSubmit = async e => {\n    showAlert({\n      msg: \"accessing user data. please wait...\"\n    }); // alert\n\n    e.preventDefault();\n    let response;\n\n    if (isMember) {\n      response = await loginUser({\n        email,\n        password\n      });\n    } else {\n      response = await registerUser({\n        email,\n        password,\n        username\n      });\n    }\n\n    if (response) {\n      const {\n        jwt: token,\n        user: {\n          username\n        }\n      } = response.data;\n      const newUser = {\n        token,\n        username\n      };\n      userLogin(newUser);\n      showAlert({\n        msg: `you are logged in : ${username}. shop away my friend`\n      });\n      history.push(\"/products\");\n    } else {\n      showAlert({\n        msg: \"there was an error. please try again...\",\n        type: \"danger\"\n      }); //  show alert\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"section\", {\n    className: \"form section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"section-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, isMember ? \"sign in\" : \"register\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"login-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, \"email\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    id: \"email\",\n    value: email,\n    onChange: e => setEmail(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, \"password\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    id: \"password\",\n    value: password,\n    onChange: e => setPassword(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  })), !isMember && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, \"username\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"username\",\n    value: username,\n    onChange: e => setUsername(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  })), isEmpty && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"form-empty\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }, \"please fill out all form fields\"), !isEmpty && /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-block btn-primary\",\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  }, \"submit\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"register-link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, isMember ? \"need to register\" : \"already a member\", /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: toggleMember,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  }, \"click here\"))));\n}","map":{"version":3,"sources":["C:/Users/Jorge/Desktop/proyectos/1react/bookshooks/bookshooks/src/pages/Login.js"],"names":["React","loginUser","registerUser","useHistory","UserContext","Login","history","userLogin","alert","showAlert","useContext","email","setEmail","useState","password","setPassword","username","setUsername","isMember","setIsMember","isEmpty","show","toggleMember","prevMember","handleSubmit","e","msg","preventDefault","response","jwt","token","user","data","newUser","push","type","target","value"],"mappings":"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","sourcesContent":["import React from \"react\";\r\n\r\n// strapi function\r\nimport loginUser from \"../strapi/loginUser\";\r\nimport registerUser from \"../strapi/registerUser\";\r\n//handle user\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { UserContext } from \"../context/user\";\r\nexport default function Login() {\r\n  const history = useHistory();\r\n  // setup user context\r\n  const { userLogin, alert, showAlert } = React.useContext(UserContext);\r\n\r\n  // state values\r\n  const [email, setEmail] = React.useState(\"\");\r\n  const [password, setPassword] = React.useState(\"\");\r\n  const [username, setUsername] = React.useState(\"default\");\r\n  const [isMember, setIsMember] = React.useState(true);\r\n\r\n  let isEmpty = !email || !password || !username || alert.show;\r\n\r\n  const toggleMember = () => {\r\n    setIsMember(prevMember => {\r\n      let isMember = !prevMember;\r\n      isMember ? setUsername(\"default\") : setUsername(\"\");\r\n      return isMember;\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async e => {\r\n    showAlert({\r\n      msg: \"accessing user data. please wait...\"\r\n    });\r\n    // alert\r\n    e.preventDefault();\r\n    let response;\r\n    if (isMember) {\r\n      response = await loginUser({ email, password });\r\n    } else {\r\n      response = await registerUser({ email, password, username });\r\n    }\r\n\r\n    if (response) {\r\n      const {\r\n        jwt: token,\r\n        user: { username }\r\n      } = response.data;\r\n      const newUser = { token, username };\r\n      userLogin(newUser);\r\n      showAlert({\r\n        msg: `you are logged in : ${username}. shop away my friend`\r\n      });\r\n      history.push(\"/products\");\r\n    } else {\r\n      showAlert({\r\n        msg: \"there was an error. please try again...\",\r\n        type: \"danger\"\r\n      });\r\n      //  show alert\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section className=\"form section\">\r\n      <h2 className=\"section-title\">{isMember ? \"sign in\" : \"register\"}</h2>\r\n      <form className=\"login-form\">\r\n        {/* single input */}\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"email\">email</label>\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            value={email}\r\n            onChange={e => setEmail(e.target.value)}\r\n          />\r\n        </div>\r\n        {/* end of single input */}\r\n        {/* single input */}\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"password\">password</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"password\"\r\n            value={password}\r\n            onChange={e => setPassword(e.target.value)}\r\n          />\r\n        </div>\r\n        {/* end of single input */}\r\n        {/* single input */}\r\n        {!isMember && (\r\n          <div className=\"form-control\">\r\n            <label htmlFor=\"username\">username</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"username\"\r\n              value={username}\r\n              onChange={e => setUsername(e.target.value)}\r\n            />\r\n          </div>\r\n        )}\r\n\r\n        {/* end of single input */}\r\n        {/* empty form text */}\r\n        {isEmpty && (\r\n          <p className=\"form-empty\">please fill out all form fields</p>\r\n        )}\r\n        {/* submit btn */}\r\n        {!isEmpty && (\r\n          <button\r\n            type=\"submit\"\r\n            className=\"btn btn-block btn-primary\"\r\n            onClick={handleSubmit}\r\n          >\r\n            submit\r\n          </button>\r\n        )}\r\n        {/* register link */}\r\n        <p className=\"register-link\">\r\n          {isMember ? \"need to register\" : \"already a member\"}\r\n          <button type=\"button\" onClick={toggleMember}>\r\n            click here\r\n          </button>\r\n        </p>\r\n      </form>\r\n    </section>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}